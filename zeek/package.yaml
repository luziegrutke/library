id: zeek
name: Zeek Integration
author: Tenzir

description: |
  The Zeek Package. Simplify connection Zeek as a data source and normalize Zeek events into OCSF.

inputs:
  listen-endpoint:
    name: Listen Endpoint
    description: A tcp endpoint where Zeek sends its logs
    type: string
    default: 127.0.0.1:5555
  log-directory:
    name: Log Directory
    description: The local filesystem path where Zeek logs are written
    type: string
    default: /opt/zeek/spool
  log-format:
    name: Log Format
    description: The log format that is configured in your Zeek deployment
    type: string
    default: zeek-tsv

pipelines:
  onboard-from-interface:
    name: Onboard Zeek via TCP
    description: Connects a Zeek data source on the network.
    definition: |
      from tcp://{{ inputs.listen-endpoint }} read {{ inputs.log-format }}
      | publish zeek/inbound
    disabled: false

  onboard-from-file:
    name: Onboard Zeek via local log files
    description: Reads Zeek logs from the local filesystem.
    definition: |
        load directory {{ inputs.log-directory }}
        | read {{ inputs.log-format }}
        | publish zeek/inbound
    disabled: true

  flow-to-ocsf:
    name: Zeek Flow -> OCSF Network Activity
    description: Convert Zeek Flow logs to OCSF Network Activity.
    definition: |
      subscribe zeek/inbound
      | publish ocsf.network_activity
    disabled: false

  smb-to-ocsf:
    name: Zeek SMB -> OCSF SMB Activity
    description: Convert Zeek SMB logs to OCSF Network Activity.
    definition: |
      subscribe zeek/inbound
      | publish ocsf.network_activity
    disabled: true

snippets:
  - name: Zeek log volume from the last 3 hours
    description: A line chart displaying how many Zeek events arrived in the last 3 hours.
    definition: |
        // experimental tql2
        metrics
        | where timestamp > 3 hour ago
        | where #schema == "tenzir.metrics.operator"
        | where pipeline_id == "zeek/onboard-from-interface"
                || pipeline_id == "zeek/onboard-from-file"
        | where source == true
        | summarize elements=sum(output.elements),
            approx_bytes=sum(output.approx_bytes),
            duration=sum(duration) by timestamp resolution 2 min
        | python '
          self.elements /= self.duration.total_seconds()
          self.approx_bytes /= self.duration.total_seconds()
        '
        | sort timestamp
        | legacy "chart area -x timestamp -y elements"
